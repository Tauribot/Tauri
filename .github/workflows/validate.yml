name: Code Validation

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install -r requirements.txt

    - name: Lint with flake8
      id: flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --statistics
      continue-on-error: true

    - name: Validate Python syntax
      id: syntax
      run: python -m compileall .
      continue-on-error: true

    - name: Send Success Webhook
      if: success() || (steps.flake8.outcome != 'failure' && steps.syntax.outcome != 'failure')
      run: curl -X GET ${{ secrets.SUCCESS_WEBHOOK_URL }}

    - name: Dokploy Deployment
      if: success() || (steps.flake8.outcome != 'failure' && steps.syntax.outcome != 'failure')
      run: |
        curl -X 'POST' \
        'https://docker.jadyn.au/api/trpc/application.deploy' \
        -H 'accept: application/json' \
        -H 'Authorization: Bearer ${{ secrets.DOKPLOY_AUTH_TOKEN }}' \
        -H 'Content-Type: application/json' \
        -d '{
            "json":{
                "applicationId": "${{ secrets.DOKPLOY_APPLICATION_ID }}"
            }
        }'

    - name: Send Discord Notification
      if: failure() || steps.flake8.outcome == 'failure' || steps.syntax.outcome == 'failure'
      run: |
        curl -H "Content-Type: application/json" -X POST ${{ secrets.DISCORD_WEBHOOK }} \
        -d '{
          "embeds": [{
            "title": "‚ùå Code Validation Failed",
            "description": "The code validation workflow has failed.",
            "color": 15158332,
            "fields": [
              {
                "name": "Repository",
                "value": "${{ github.repository }}",
                "inline": true
              },
              {
                "name": "Branch",
                "value": "${{ github.ref }}",
                "inline": true
              },
              {
                "name": "Author",
                "value": "${{ github.actor }}",
                "inline": true
              },
              {
                "name": "Commit",
                "value": "${{ github.sha }}",
                "inline": false
              }
            ],
            "footer": {
              "text": "Click the title to view details"
            },
            "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }]
        }'